import numpy as np
import matplotlib.pyplot as plt
from random import *
from time import *
import matplotlib.pyplot as plt


type_de_case= [[-60, -60, 'scan'], 
             [-40, -40, 'evit'], 
             [-20, -20, 'scan'], 
             [0, 0, 'evit'], 
             [20, 20, 'scan'], 
             [40, 40, 'evit'], 
             [60, 60, 'scan'], 
             [80, 80, 'scan'], 

             [-60, -60, 'scan'], 
             [-40, -40, 'evit'], 
             [-20, -20, 'scan'], 
             [0, 0, 'scan'], 
             [20, 20, 'scan'], 
             [40, 40, 'evit'], 
             [60, 60, 'scan'], 
             [80, 80, 'scan'],

             [-60, -60, 'scan'], 
             [-40, -40, 'scan'], 
             [-20, -20, 'evit'], 
             [0, 0, 'scan'], 
             [20, 20, 'evit'], 
             [40, 40, 'scan'], 
             [60, 60, 'evit'], 
             [80, 80, 'evit'], 

             [-60, -60, 'evit'], 
             [-40, -40, 'evit'], 
             [-20, -20, 'evit'], 
             [0, 0, 'evit'], 
             [20, 20, 'scan'], 
             [40, 40, 'evit'], 
             [60, 60, 'scan'], 
             [80, 80, 'scan'], 

             [-60, -60, 'scan'], 
             [-40, -40, 'scan'], 
             [-20, -20, 'evit'], 
             [0, 0, 'scan'], 
             [20, 20, 'evit'], 
             [40, 40, 'scan'], 
             [60, 60, 'evit'], 
             [80, 80, 'scan'], 

             [-60, -60, 'scan'], 
             [-40, -40, 'evit'], 
             [-20, -20, 'scan'], 
             [0, 0, 'evit'], 
             [20, 20, 'scan'], 
             [40, 40, 'evit'], 
             [60, 60, 'evit'], 
             [80, 80, 'evit'], 

             [-60, -60, 'evit'], 
             [-40, -40, 'scan'], 
             [-20, -20, 'evit'], 
             [0, 0, 'scan'], 
             [20, 20, 'evit'], 
             [40, 40, 'scan'], 
             [60, 60, 'evit'], 
             [80, 80, 'evit'], 

             [-60, -60, 'evit'], 
             [-40, -40, 'scan'], 
             [-20, -20, 'scan'], 
             [0, 0, 'evit'], 
             [20, 20, 'scan'], 
             [40, 40, 'scan'], 
             [60, 60, 'evit'], 
             [80, 80, 'evit']]

coordonnes_cases= [[[-70, -70, 6], [-50, -70, 6], [-70, -50, 6], [-50, -50, 6]], 
                     [[-50, -70, 6], [-30, -70, 6], [-50, -50, 6], [-30, -50, 6]], 
                     [[-30, -70, 6], [-10, -70, 6], [-30, -50, 6], [-10, -50, 6]], 
                     [[-10, -70, 6], [10, -70, 6], [-10, -50, 6], [10, -50, 6]], 
                     [[10, -70, 6], [30, -70, 6], [10, -50, 6], [30, -50, 6]], 
                     [[30, -70, 6], [50, -70, 6], [30, -50, 6], [50, -50, 6]], 
                     [[50, -70, 6], [70, -70, 6], [50, -50, 6], [70, -50, 6]], 
                     [[70, -70, 6], [90, -70, 6], [70, -50, 6], [90, -50, 6]], 

                     [[-70, -50, 6], [-50, -50, 6], [-70, -30, 6], [-50, -30, 6]], 
                     [[-50, -50, 6], [-30, -50, 6], [-50, -30, 6], [-30, -30, 6]], 
                     [[-30, -50, 6], [-10, -50, 6], [-30, -30, 6], [-10, -30, 6]], 
                     [[-10, -50, 6], [10, -50, 6], [-10, -30, 6], [10, -30, 6]], 
                     [[10, -50, 6], [30, -50, 6], [10, -30, 6], [30, -30, 6]], 
                     [[30, -50, 6], [50, -50, 6], [30, -30, 6], [50, -30, 6]], 
                     [[50, -50, 6], [70, -50, 6], [50, -30, 6], [70, -30, 6]], 
                     [[70, -50, 6], [90, -50, 6], [70, -30, 6], [90, -30, 6]], 

                     [[-70, -30, 6], [-50, -30, 6], [-70, -10, 6], [-50, -10, 6]], 
                     [[-50, -30, 6], [-30, -30, 6], [-50, -10, 6], [-30, -10, 6]], 
                     [[-30, -30, 6], [-10, -30, 6], [-30, -10, 6], [-10, -10, 6]],
                     [[-10, -30, 6], [10, -30, 6], [-10, -10, 6], [10, -10, 6]], 
                     [[10, -30, 6], [30, -30, 6], [10, -10, 6], [30, -10, 6]], 
                     [[30, -30, 6], [50, -30, 6], [30, -10, 6], [50, -10, 6]], 
                     [[50, -30, 6], [70, -30, 6], [50, -10, 6], [70, -10, 6]], 
                     [[70, -30, 6], [90, -30, 6], [70, -10, 6], [90, -10, 6]], 

                     [[-70, -10, 6], [-50, -10, 6], [-70, 10, 6], [-50, 10, 6]], 
                     [[-50, -10, 6], [-30, -10, 6], [-50, 10, 6], [-30, 10, 6]], 
                     [[-30, -10, 6], [-10, -10, 6], [-30, 10, 6], [-10, 10, 6]], 
                     [[-10, -10, 6], [10, -10, 6], [-10, 10, 6], [10, 10, 6]], 
                     [[10, -10, 6], [30, -10, 6], [10, 10, 6], [30, 10, 6]], 
                     [[30, -10, 6], [50, -10, 6], [30, 10, 6], [50, 10, 6]], 
                     [[50, -10, 6], [70, -10, 6], [50, 10, 6], [70, 10, 6]], 
                     [[70, -10, 6], [90, -10, 6], [70, 10, 6], [90, 10, 6]],

                     [[-70, 10, 6], [-50, 10, 6], [-70, 30, 6], [-50, 30, 6]], 
                     [[-50, 10, 6], [-30, 10, 6], [-50, 30, 6], [-30, 30, 6]], 
                     [[-30, 10, 6], [-10, 10, 6], [-30, 30, 6], [-10, 30, 6]], 
                     [[-10, 10, 6], [10, 10, 6], [-10, 30, 6], [10, 30, 6]], 
                     [[10, 10, 6], [30, 10, 6], [10, 30, 6], [30, 30, 6]], 
                     [[30, 10, 6], [50, 10, 6], [30, 30, 6], [50, 30, 6]], 
                     [[50, 10, 6], [70, 10, 6], [50, 30, 6], [70, 30, 6]], 
                     [[70, 10, 6], [90, 10, 6], [70, 30, 6], [90, 30, 6]], 

                     [[-70, 30, 6], [-50, 30, 6], [-70, 50, 6], [-50, 50, 6]], 
                     [[-50, 30, 6], [-30, 30, 6], [-50, 50, 6], [-30, 50, 6]], 
                     [[-30, 30, 6], [-10, 30, 6], [-30, 50, 6], [-10, 50, 6]], 
                     [[-10, 30, 6], [10, 30, 6], [-10, 50, 6], [10, 50, 6]], 
                     [[10, 30, 6], [30, 30, 6], [10, 50, 6], [30, 50, 6]], 
                     [[30, 30, 6], [50, 30, 6], [30, 50, 6], [50, 50, 6]], 
                     [[50, 30, 6], [70, 30, 6], [50, 50, 6], [70, 50, 6]], 
                     [[70, 30, 6], [90, 30, 6], [70, 50, 6], [90, 50, 6]], 

                     [[-70, 50, 6], [-50, 50, 6], [-70, 70, 6], [-50, 70, 6]], 
                     [[-50, 50, 6], [-30, 50, 6], [-50, 70, 6], [-30, 70, 6]], 
                     [[-30, 50, 6], [-10, 50, 6], [-30, 70, 6], [-10, 70, 6]], 
                     [[-10, 50, 6], [10, 50, 6], [-10, 70, 6], [10, 70, 6]], 
                     [[10, 50, 6], [30, 50, 6], [10, 70, 6], [30, 70, 6]], 
                     [[30, 50, 6], [50, 50, 6], [30, 70, 6], [50, 70, 6]], 
                     [[50, 50, 6], [70, 50, 6], [50, 70, 6], [70, 70, 6]], 
                     [[70, 50, 6], [90, 50, 6], [70, 70, 6], [90, 70, 6]], 

                     [[-70, 70, 6], [-50, 70, 6], [-70, 90, 6], [-50, 90, 6]], 
                     [[-50, 70, 6], [-30, 70, 6], [-50, 90, 6], [-30, 90, 6]],
                     [[-30, 70, 6], [-10, 70, 6], [-30, 90, 6], [-10, 90, 6]], 
                     [[-10, 70, 6], [10, 70, 6], [-10, 90, 6], [10, 90, 6]], 
                     [[10, 70, 6], [30, 70, 6], [10, 90, 6], [30, 90, 6]], 
                     [[30, 70, 6], [50, 70, 6], [30, 90, 6], [50, 90, 6]], 
                     [[50, 70, 6], [70, 70, 6], [50, 90, 6], [70, 90, 6]], 
                     [[70, 70, 6], [90, 70, 6], [70, 90, 6], [90, 90, 6]]]
def type_case(nbr_case=64,robot=[2.5,2]) :
    
    for i in range(0,(nbr_case+1)*(nbr_case+1)) :
        print("coordonnee",coordonnee[i])
        if coordonnee[i][0]>= robot[0] and  coordonnee[i][1]>= robot[1]  and  flag==False : 
        
            print("nos coordonnee",coordonnee[i])
            print("i",i)
            flag=True
            type=coordonnee[i][2]
            print("le robot est dans la case =",i)
            print("case de type :", type)
            print("les sorties/entr√©e disponible de cette cas sont les suivante : ",coordonnes_grille[i-1])
            if type=='evite' :

                return 1,coordonnes_grille[i-1]

            else :
                
                return 0,coordonnes_grille[i-1]

type_case(nbr_case=64,robot=[-65,-65])