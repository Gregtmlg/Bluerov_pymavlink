import numpy as np
import math
from matplotlib import pyplot as plt
import gym
from gym import spaces
from gym.spaces import Box, Dict, Discrete, MultiBinary, MultiDiscrete

depart = -78
arrivee = 78

linspace = np.linspace(depart, arrivee, 40)
array = np.array([[1,2,3,4,5], [2,3,4,5,6]])
liste = [1,2,3,4,5]
zeros = np.zeros((3,2))

observation_space = Dict(
                    {
                        #X Y Z  depart
                        'pos_départ' : spaces.Box(low=float("-inf"), high=float("inf"), shape=(1,3), dtype=np.float32),
                        #X Y Z arrive
                        'intervention' : spaces.Box(low=float("-inf"), high=float("inf"), shape=(7,3), dtype=np.float32),
                        #X Y Z ma_pos
                        'pos_cur' : spaces.Box(low=float("-inf"), high=float("inf"), shape=(1,3), dtype=np.float32),
                        #Niveau de batterie 
                        'nivbat' : spaces.Box(low=0.0, high=1.0, shape=(1,), dtype=np.float32),
                        #Incertitude de position
                        'pos_error' : spaces.Box(low=0.0, high=float('inf'), shape=(1,), dtype=np.float32),
                        #X Y Z des portes des zones
                        'waypnt' : spaces.Box(low=float("-inf"), high=float("inf"), shape=(50, 3), dtype=np.float32),
                        #data du velodymne, a determiner 
                        'data_v' : spaces.Box(low=float("-inf"), high=float("inf"), shape=(50, 3), dtype=np.float32),
                        # data caméra RGB : il faudra mettre le format de l'image
                        'data_cam' : spaces.Box(low=0.0, high=255, shape=(10, 5, 3), dtype=np.int16)
                    }
                  )

action_space =  Dict(
            {
               'mode_trait' : spaces.Discrete(3),
               'case_suivante' : spaces.Discrete(len(liste))
                
            })


coordonnee= [[-60, -60, 'scan'], 
             [-40, -40, 'evit'], 
             [-20, -20, 'scan'], 
             [0, 0, 'evit'], 
             [20, 20, 'scan'], 
             [40, 40, 'evit'], 
             [60, 60, 'scan'], 
             [80, 80, 'scan'], 

             [-60, -60, 'scan'], 
             [-40, -40, 'evit'], 
             [-20, -20, 'scan'], 
             [0, 0, 'scan'], 
             [20, 20, 'scan'], 
             [40, 40, 'evit'], 
             [60, 60, 'scan'], 
             [80, 80, 'scan'],

             [-60, -60, 'scan'], 
             [-40, -40, 'scan'], 
             [-20, -20, 'evit'], 
             [0, 0, 'scan'], 
             [20, 20, 'evit'], 
             [40, 40, 'scan'], 
             [60, 60, 'evit'], 
             [80, 80, 'evit'], 

             [-60, -60, 'evit'], 
             [-40, -40, 'evit'], 
             [-20, -20, 'evit'], 
             [0, 0, 'evit'], 
             [20, 20, 'scan'], 
             [40, 40, 'evit'], 
             [60, 60, 'scan'], 
             [80, 80, 'scan'], 

             [-60, -60, 'scan'], 
             [-40, -40, 'scan'], 
             [-20, -20, 'evit'], 
             [0, 0, 'scan'], 
             [20, 20, 'evit'], 
             [40, 40, 'scan'], 
             [60, 60, 'evit'], 
             [80, 80, 'scan'], 

             [-60, -60, 'scan'], 
             [-40, -40, 'evit'], 
             [-20, -20, 'scan'], 
             [0, 0, 'evit'], 
             [20, 20, 'scan'], 
             [40, 40, 'evit'], 
             [60, 60, 'evit'], 
             [80, 80, 'evit'], 

             [-60, -60, 'evit'], 
             [-40, -40, 'scan'], 
             [-20, -20, 'evit'], 
             [0, 0, 'scan'], 
             [20, 20, 'evit'], 
             [40, 40, 'scan'], 
             [60, 60, 'evit'], 
             [80, 80, 'evit'], 

             [-60, -60, 'evit'], 
             [-40, -40, 'scan'], 
             [-20, -20, 'scan'], 
             [0, 0, 'evit'], 
             [20, 20, 'scan'], 
             [40, 40, 'scan'], 
             [60, 60, 'evit'], 
             [80, 80, 'evit']]

coordonnes_grille = [[[-70, -70, 6], [-50, -70, 6], [-70, -50, 6], [-50, -50, 6]], 
                     [[-50, -70, 6], [-30, -70, 6], [-50, -50, 6], [-30, -50, 6]], 
                     [[-30, -70, 6], [-10, -70, 6], [-30, -50, 6], [-10, -50, 6]], 
                     [[-10, -70, 6], [10, -70, 6], [-10, -50, 6], [10, -50, 6]], 
                     [[10, -70, 6], [30, -70, 6], [10, -50, 6], [30, -50, 6]], 
                     [[30, -70, 6], [50, -70, 6], [30, -50, 6], [50, -50, 6]], 
                     [[50, -70, 6], [70, -70, 6], [50, -50, 6], [70, -50, 6]], 
                     [[70, -70, 6], [90, -70, 6], [70, -50, 6], [90, -50, 6]], 

                     [[-70, -50, 6], [-50, -50, 6], [-70, -30, 6], [-50, -30, 6]], 
                     [[-50, -50, 6], [-30, -50, 6], [-50, -30, 6], [-30, -30, 6]], 
                     [[-30, -50, 6], [-10, -50, 6], [-30, -30, 6], [-10, -30, 6]], 
                     [[-10, -50, 6], [10, -50, 6], [-10, -30, 6], [10, -30, 6]], 
                     [[10, -50, 6], [30, -50, 6], [10, -30, 6], [30, -30, 6]], 
                     [[30, -50, 6], [50, -50, 6], [30, -30, 6], [50, -30, 6]], 
                     [[50, -50, 6], [70, -50, 6], [50, -30, 6], [70, -30, 6]], 
                     [[70, -50, 6], [90, -50, 6], [70, -30, 6], [90, -30, 6]], 

                     [[-70, -30, 6], [-50, -30, 6], [-70, -10, 6], [-50, -10, 6]], 
                     [[-50, -30, 6], [-30, -30, 6], [-50, -10, 6], [-30, -10, 6]], 
                     [[-30, -30, 6], [-10, -30, 6], [-30, -10, 6], [-10, -10, 6]],
                     [[-10, -30, 6], [10, -30, 6], [-10, -10, 6], [10, -10, 6]], 
                     [[10, -30, 6], [30, -30, 6], [10, -10, 6], [30, -10, 6]], 
                     [[30, -30, 6], [50, -30, 6], [30, -10, 6], [50, -10, 6]], 
                     [[50, -30, 6], [70, -30, 6], [50, -10, 6], [70, -10, 6]], 
                     [[70, -30, 6], [90, -30, 6], [70, -10, 6], [90, -10, 6]], 

                     [[-70, -10, 6], [-50, -10, 6], [-70, 10, 6], [-50, 10, 6]], 
                     [[-50, -10, 6], [-30, -10, 6], [-50, 10, 6], [-30, 10, 6]], 
                     [[-30, -10, 6], [-10, -10, 6], [-30, 10, 6], [-10, 10, 6]], 
                     [[-10, -10, 6], [10, -10, 6], [-10, 10, 6], [10, 10, 6]], 
                     [[10, -10, 6], [30, -10, 6], [10, 10, 6], [30, 10, 6]], 
                     [[30, -10, 6], [50, -10, 6], [30, 10, 6], [50, 10, 6]], 
                     [[50, -10, 6], [70, -10, 6], [50, 10, 6], [70, 10, 6]], 
                     [[70, -10, 6], [90, -10, 6], [70, 10, 6], [90, 10, 6]],

                     [[-70, 10, 6], [-50, 10, 6], [-70, 30, 6], [-50, 30, 6]], 
                     [[-50, 10, 6], [-30, 10, 6], [-50, 30, 6], [-30, 30, 6]], 
                     [[-30, 10, 6], [-10, 10, 6], [-30, 30, 6], [-10, 30, 6]], 
                     [[-10, 10, 6], [10, 10, 6], [-10, 30, 6], [10, 30, 6]], 
                     [[10, 10, 6], [30, 10, 6], [10, 30, 6], [30, 30, 6]], 
                     [[30, 10, 6], [50, 10, 6], [30, 30, 6], [50, 30, 6]], 
                     [[50, 10, 6], [70, 10, 6], [50, 30, 6], [70, 30, 6]], 
                     [[70, 10, 6], [90, 10, 6], [70, 30, 6], [90, 30, 6]], 

                     [[-70, 30, 6], [-50, 30, 6], [-70, 50, 6], [-50, 50, 6]], 
                     [[-50, 30, 6], [-30, 30, 6], [-50, 50, 6], [-30, 50, 6]], 
                     [[-30, 30, 6], [-10, 30, 6], [-30, 50, 6], [-10, 50, 6]], 
                     [[-10, 30, 6], [10, 30, 6], [-10, 50, 6], [10, 50, 6]], 
                     [[10, 30, 6], [30, 30, 6], [10, 50, 6], [30, 50, 6]], 
                     [[30, 30, 6], [50, 30, 6], [30, 50, 6], [50, 50, 6]], 
                     [[50, 30, 6], [70, 30, 6], [50, 50, 6], [70, 50, 6]], 
                     [[70, 30, 6], [90, 30, 6], [70, 50, 6], [90, 50, 6]], 

                     [[-70, 50, 6], [-50, 50, 6], [-70, 70, 6], [-50, 70, 6]], 
                     [[-50, 50, 6], [-30, 50, 6], [-50, 70, 6], [-30, 70, 6]], 
                     [[-30, 50, 6], [-10, 50, 6], [-30, 70, 6], [-10, 70, 6]], 
                     [[-10, 50, 6], [10, 50, 6], [-10, 70, 6], [10, 70, 6]], 
                     [[10, 50, 6], [30, 50, 6], [10, 70, 6], [30, 70, 6]], 
                     [[30, 50, 6], [50, 50, 6], [30, 70, 6], [50, 70, 6]], 
                     [[50, 50, 6], [70, 50, 6], [50, 70, 6], [70, 70, 6]], 
                     [[70, 50, 6], [90, 50, 6], [70, 70, 6], [90, 70, 6]], 

                     [[-70, 70, 6], [-50, 70, 6], [-70, 90, 6], [-50, 90, 6]], 
                     [[-50, 70, 6], [-30, 70, 6], [-50, 90, 6], [-30, 90, 6]],
                     [[-30, 70, 6], [-10, 70, 6], [-30, 90, 6], [-10, 90, 6]], 
                     [[-10, 70, 6], [10, 70, 6], [-10, 90, 6], [10, 90, 6]], 
                     [[10, 70, 6], [30, 70, 6], [10, 90, 6], [30, 90, 6]], 
                     [[30, 70, 6], [50, 70, 6], [30, 90, 6], [50, 90, 6]], 
                     [[50, 70, 6], [70, 70, 6], [50, 90, 6], [70, 90, 6]], 
                     [[70, 70, 6], [90, 70, 6], [70, 90, 6], [90, 90, 6]]]

for i in range(0,64) : 
    plt.plot(coordonnes_grille[i][0],coordonnes_grille[i][1],"o")


print(coordonnee)